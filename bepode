////////////////////////////////////////////////////////////////////////////////
// Bépode : Improved ergonomic french keymap using Dvorak method
// Built on 'Dvorak Fr / Bépo' under CC-BY-SA
// By Infertux <infertux at infertux dot com>
//
// Bépode layout (version 0.0) for a TypeMatrix 2030 keyboard:
// ┌─────┐
// │ S A │   S = Shift,  A = AltGr + Shift
// │ s a │   s = normal, a = AltGr
// └─────┘
//
// Doh! There's an awesome unicode-art right here:
//
// ┏━━━━━┳━━━━━┳━━━━━┳━━━━━┳━━━━━┳━━━━━┳━━━━━┳━━━━━┳━━━━━┳━━━━━┳━━━━━┳━━━━━┳━━━━━┳━━━━━┳━━━━━┓
// ┃     ┃     ┃     ┃     ┃     ┃     ┃ del ┃     ┃     ┃     ┃     ┃     ┃     ┃     ┃     ┃
// ┃ esc ┃ F1  ┃ F2  ┃ F3  ┃ F4  ┃ F5  ┃     ┃ F6  ┃ F7  ┃ F8  ┃ F9  ┃ F10 ┃ F11 ┃ F12 ┃ num ┃
// ┡━━━━━╇━━━━━╇━━━━━╇━━━━━╇━━━━━╇━━━━━┫     ┣━━━━━╇━━━━━╇━━━━━╇━━━━━╇━━━━━╇━━━━━╇━━━━━╋━━━━━┫
// │ # ¶ │ 1 „ │ 2 “ │ 3 ” │ 4 ≤ │ 5 ≥ ┣━━━━━┫ 6   │ 7 ¬ │ 8 ¼ │ 9 ½ │ 0 ¾ │ ° ′ │ ` ″ ┃calc ┃
// │ $ – │ " — │ < « │ > » │ ( [ │ ) ] ┃ ⌫   ┃ @ ^ │ + ± │ - − │ / ÷ │ * × │ = ≠ │ % ‰ ┃     ┃
// ┢━━━━━╅─────┼─────┼─────┼─────┼─────┨     ┠─────┼─────┼─────┼─────┼─────┼─────┼─────╊━━━━━┫
// ┃ ↹   ┃ B ¦ │ É ˝ │ P § │ O Œ │ È ` ┃     ┃ W   │ V   │ D Ð │ L   │ J Ĳ │ Z Ə │ !   ┃mail ┃
// ┃     ┃ b | │ é ˊ │ p & │ o œ │ è ` ┃     ┃ w ˘ │ v ˇ │ d ð │ l / │ j ĳ │ z ə │ ^ ¡ ┃     ┃
// ┣━━━━━╉─────┼─────┼─────┼─────┼─────╊━━━━━╉─────┼─────┼─────┼─────┼─────┼─────╆━━━━━╋━━━━━┫
// ┃ ⇧   ┃ A Æ │ U Ù │ I ˙ │ E ¤ │ ; ̛  ┃ ⏎   ┃ C ſ │ T Þ │ S ẞ │ R ™ │ N   │ M º ┃ ⇧   ┃caps ┃
// ┃     ┃ a æ │ u ù │ i ¨ │ e € │ , ’ ┃     ┃ c © │ t þ │ s ß │ r ® │ n ˜ │ m ¯ ┃     ┃     ┃
// ┃     ┠─────┼─────┼─────┼─────┼─────┨     ┠─────┼─────┼─────┼─────┼─────┼─────┨     ┣━━━━━┫
// ┃     ┃ À   │ Y ‘ │ X ’ │ : · │ K   ┃     ┃ ?  ̉ │ Q  ̣ │ G   │ H ‡ │ F ª │ Ç , ┃     ┃web  ┃
// ┃     ┃ à \ │ y { │ x } │ . … │ k ~ ┃     ┃ ' ¿ │ q ˚ │ g µ │ h † │ f ˛ │ ç ¸ ┃     ┃     ┃
// ┣━━━━━╋━━━━━╈━━━━━╈━━━━━╅─────┴─────┺━━━━━┹─────┴─────╆━━━━━╈━━━━━╈━━━━━╈━━━━━╋━━━━━╋━━━━━┫
// ┃ctrl ┃pp   ┃     ┃ws   ┃                             ┃     ┃ ⇱   ┃  ⬆  ┃ ⇲   ┃ctrl ┃ ⇞   ┃
// ┃     ┃     ┃     ┃     ┃  NBSp            NBSp fine  ┃     ┃     ┃     ┃     ┃     ┃     ┃
// ┣━━━━━╋━━━━━┻━━┳━━┻━━━━━┫  ␣ (Space)       _          ┣━━━━━╋━━━━━╋━━━━━╋━━━━━┫     ┣━━━━━┫
// ┃fn   ┃home    ┃alt     ┠─────────────────────────────┨alt  ┃  ⬅  ┃  ⬇  ┃  ➡  ┃     ┃ ⇟   ┃
// ┃     ┃        ┃        ┃                             ┃     ┃     ┃     ┃     ┃     ┃     ┃
// ┗━━━━━┻━━━━━━━━┻━━━━━━━━┛                             ┗━━━━━┻━━━━━┻━━━━━┻━━━━━┻━━━━━┻━━━━━┛


partial alphanumeric_keys
xkb_symbols "bepode" {

    include "level3(ralt_switch)"
    include "keypad(oss)"

    name[Group1]= "France - Bepode, ergonomic, Dvorak way";

    // First row
    key <TLDE> { [          dollar,   numbersign,        endash,       paragraph ] }; // $ # – ¶
    key <AE01> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [        quotedbl,            1,         emdash, doublelowquotemark ] }; // " 1 — „
    key <AE02> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [            less,            2,  guillemotleft,  leftdoublequotemark ] }; // < 2 « “
    key <AE03> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [         greater,            3, guillemotright, rightdoublequotemark ] }; // > 3 » ”
    key <AE04> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [       parenleft,            4,    bracketleft,      lessthanequal ] }; // ( 4 [ ≤
    key <AE05> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [      parenright,            5,   bracketright,   greaterthanequal ] }; // ) 5 ] ≥
    key <AE06> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [              at,            6,    asciicircum                 ] }; // @ 6 ^
    key <AE07> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [            plus,            7,      plusminus,        notsign ] }; // + 7 ± ¬
    key <AE08> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [           minus,            8,          U2212,     onequarter ] }; // - 8 − ¼
    key <AE09> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [           slash,            9,       division,        onehalf ] }; // / 9 ÷ ½
    key <AE10> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [        asterisk,            0,       multiply,  threequarters ] }; // * 0 × ¾
    key <AE11> { [           equal,       degree,       notequal,        minutes ] }; // = ° ≠ ′
    key <AE12> { [         percent,        grave,          U2030,        seconds ] }; // % ` ‰ ″

    // Second row
    key <AD01> { [               b,            B,                     bar,            brokenbar ] }; // b B | ¦
    key <AD02> { [          eacute,       Eacute,              dead_acute,     dead_doubleacute ] }; // é É ˊ ˝
    key <AD03> { [               p,            P,               ampersand,              section ] }; // p P & §
    key <AD04> { [               o,            O,                      oe,                   OE ] }; // o O œ Œ
    key <AD05> { [          egrave,       Egrave,              dead_grave,                grave ] }; // è È ` `
    key <AD06> { [               w,            W,              dead_breve                       ] }; // w W ˘
    key <AD07> { [               v,            V,              dead_caron                       ] }; // v V ˇ
    key <AD08> { [               d,            D,                     eth,                  ETH ] }; // d D ð Ð
    key <AD09> { [               l,            L,             dead_stroke                       ] }; // l L /
    key <AD10> { [               j,            J,                   U0133,                U0132 ] }; // j J ĳ Ĳ
    key <AD11> { [               z,            Z,                   schwa,                SCHWA ] }; // z Z ə Ə
    key <AD12> { [ dead_circumflex,       exclam,              exclamdown                       ] }; // ^ ! ¡

    // Third row
    key <AC01> { [               a,            A,                      ae,                   AE ] }; // a A æ Æ
    key <AC02> { [               u,            U,                  ugrave,               Ugrave ] }; // u U ù Ù
    key <AC03> { [               i,            I,          dead_diaeresis,        dead_abovedot ] }; // i I ¨ ˙
    key <AC04> { [               e,            E,                EuroSign,        dead_currency ] }; // e E € ¤
    key <AC05> { [           comma,    semicolon,    rightsinglequotemark,            dead_horn ] }; // , ; ’ ̛
    key <AC06> { [               c,            C,               copyright,                U017F ] }; // c C © ſ
    key <AC07> { [               t,            T,                   thorn,                THORN ] }; // t T þ Þ
    key <AC08> { [               s,            S,                  ssharp,                U1E9E ] }; // s S ß ẞ
    key <AC09> { [               r,            R,              registered,            trademark ] }; // r R ® ™
    key <AC10> { [               n,            N,              dead_tilde                       ] }; // n N ~
    key <AC11> { [               m,            M,             dead_macron,            masculine ] }; // m M ¯ º
    key <BKSL> { [        ccedilla,     Ccedilla,            dead_cedilla,      dead_belowcomma ] }; // ç Ç ¸ ,

    // Fourth row
    key <LSGT> { [     ecircumflex,  Ecircumflex,                   slash                       ] }; // ê Ê /   // 102th key
    key <AB01> { [          agrave,       Agrave,               backslash                       ] }; // à À \
    key <AB02> { [               y,            Y,               braceleft,  leftsinglequotemark ] }; // y Y { ‘
    key <AB03> { [               x,            X,              braceright, rightsinglequotemark ] }; // x X } ’
    key <AB04> { [          period,        colon,                ellipsis,       periodcentered ] }; // . : … ·
    key <AB05> { [               k,            K,              asciitilde                       ] }; // k K ~
    key <AB06> { [      apostrophe,     question,            questiondown,            dead_hook ] }; // ' ? ¿ ̉
    key <AB07> { [               q,            Q,          dead_abovering,        dead_belowdot ] }; // q Q ˚ ̣
    key <AB08> { [               g,            G,                      mu                       ] }; // g G µ
    key <AB09> { [               h,            H,                  dagger,         doubledagger ] }; // h H † ‡
    key <AB10> { [               f,            F,             dead_ogonek,          ordfeminine ] }; // f F ˛ ª

    key <SPCE> { [           space, nobreakspace,              underscore,                U202F ] }; // ␣ NBSp _ NBSpF
};

////////////////////////////////////////////////////////////////////////////////

